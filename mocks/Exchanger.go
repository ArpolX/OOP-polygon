// Code generated by MockGen. DO NOT EDIT.
// Source: OOP-polygon/exchanges (interfaces: Exchanger)

// Package mocks is a generated GoMock package.
package mocks

import (
	exchanges "OOP-polygon/exchanges"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockExchanger is a mock of Exchanger interface.
type MockExchanger struct {
	ctrl     *gomock.Controller
	recorder *MockExchangerMockRecorder
}

// MockExchangerMockRecorder is the mock recorder for MockExchanger.
type MockExchangerMockRecorder struct {
	mock *MockExchanger
}

// NewMockExchanger creates a new mock instance.
func NewMockExchanger(ctrl *gomock.Controller) *MockExchanger {
	mock := &MockExchanger{ctrl: ctrl}
	mock.recorder = &MockExchangerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockExchanger) EXPECT() *MockExchangerMockRecorder {
	return m.recorder
}

// TradesBinance mocks base method.
func (m *MockExchanger) TradesBinance(arg0 string, arg1 int) (exchanges.Binance, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "TradesBinance", arg0, arg1)
	ret0, _ := ret[0].(exchanges.Binance)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// TradesBinance indicates an expected call of TradesBinance.
func (mr *MockExchangerMockRecorder) TradesBinance(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "TradesBinance", reflect.TypeOf((*MockExchanger)(nil).TradesBinance), arg0, arg1)
}

// TradesBybit mocks base method.
func (m *MockExchanger) TradesBybit(arg0 string, arg1 int) (exchanges.Bybit, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "TradesBybit", arg0, arg1)
	ret0, _ := ret[0].(exchanges.Bybit)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// TradesBybit indicates an expected call of TradesBybit.
func (mr *MockExchangerMockRecorder) TradesBybit(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "TradesBybit", reflect.TypeOf((*MockExchanger)(nil).TradesBybit), arg0, arg1)
}

// TradesMexc mocks base method.
func (m *MockExchanger) TradesMexc(arg0 string, arg1 int) (exchanges.Mexc, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "TradesMexc", arg0, arg1)
	ret0, _ := ret[0].(exchanges.Mexc)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// TradesMexc indicates an expected call of TradesMexc.
func (mr *MockExchangerMockRecorder) TradesMexc(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "TradesMexc", reflect.TypeOf((*MockExchanger)(nil).TradesMexc), arg0, arg1)
}
